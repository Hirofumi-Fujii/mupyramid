このパッケージについて

　　　　　　　　　　　　　　　　　　　　　藤井啓文
　　　　　　　　　　　　　　　　　　(2018年05月21日 追記)
　　　　　　　　　　　　　　　　　　(2018年05月17日 記載)

このパッケージは、pyramid の muon radiography 観測の
rawdata を処理する一連のプログラム群です。

【位置検出】
Pyramid 観測に用いている装置は、長さ 1.2m 切り口 1cm x 1cm
のシンチレータを 1.2m x 1.2m の平面上に並べて 1次元方向の位置
検出器を構成し、これを東西方向（以下 X方向）の位置検出用に 2面、
南北方向（以下 Y方向）の位置検出用に 2面用いて各方向の
位置の差をとることで、muon の飛来方向を 3次元的に決定しています。
Pyramid 内への搬入を容易にするため、各面は中央で折りたためる
（すなわち 1.2m x 0.6m x 2）構造になっています。

【DAQbox】
各面には、DAQbox と呼ばれる信号処理回路が設置されており、
この回路によりシンチレータ 1本の信号は 1bit の信号に digitize され、
面を構成する 120本のシンチレータのうち、少なくとも 1本の
シンチレータに信号があった時に、後述する時刻情報とともに
ネットワークを通じて出力されます。
位置情報は、各シンチレータに対応する 120bit が常に出力
されますが、折りたたみ構造に合わせて、シンチレータ　60本を
一まとまりとして、出力時には 128bit を 1 group とする
2つのグループに分けて格納されます。当然ながら、各 group とも
有効　bit 数は 60bit です。

【時刻情報】
各 DAQbox には 1マクロ秒の外部クロックをカウントするカウンター
（54bit カウンター）が設けられており、この外部クロックは
各 DAQbox に共通に配布されます。
更に、各DAQbox 内部には、1ナノ秒のクロック発生機構があり、この
ナノ秒クロックをカウントするカウンター（10bit カウンター）が
設けられています。このカウンターは、1マイクロ秒の外部クロックの
入力毎にリセットされ、マイクロ秒カウンターと連動して時刻情報を
構成します。

【プログラムパッケージにおける DAQbox の数】
本プログラムパッケージでは、DAQbox の数は、databank.h の
namespace MUONDAQ の中の DataBank class の中で

        static const unsigned int NUM_DAQBOXES = 4;

と設定されています。

【Rawdata file における DAQBox の Id】
現在の DAQ program が記録する rawdata file 中での DAQBox Id は

	'7', '8', '9', 'a'

の4つが使われています。

【gencoinz について】
gencoinz は、rawdata file から 各DAQBox の clock を調べ、
同時と判定された event を出力します。

[使用法]
使用法は

  gencoinz [options] rawdata-file

です。出力は default では標準出力です。出力ファイルを指定する場合は
option

  -out outfile

で指定します。出力ファイルを指定した場合は、出力は gzip で圧縮
されます。

一つの DAQBox 内でも時間的に非常に近接する事象は同一事象として
扱うことができます。この時間幅 mwidth は

  -merge mwidth

で指定します。時間幅 mwidth の単位はナノ秒です。


DAQBox 間の coincidence 幅 cwidth は

  -width cwidth

で指定します。Coincidence 幅 cwidth の単位はナノ秒です。

何等かの原因で DAQBox のクロックカウントがずれている場合、クロックカウントの
オフセットを指定することができます。DAQBoxの識別子が id である DAQBox に
対し offset を設定するには

  -toffset id offset

で指定します。この offset の単位はナノ秒で、この値を加算して
DAQBox 間の同期を判定します。この offset は符号無し整数で与えます。
従って、最も進んでいるクロックカウントの DAQBox がオフセット 0 に
なるようにして残りに正のオフセットを与えてください。
例えば DAQBox 7 8 9 a が使われていて、8 が 12マイクロ秒
進んでいる場合は、

  -toffset 7 12000 -toffset 9 12000 -toffset a 12000

としてください。

[出力 record について]
gencoin が独自に出力する record は基本的に COIN record のみです（起動
情報を残すためINFO record や raw data 情報も出力します）。
rawdata file から DATx record を取り出し、解析します。それ以外の
record は、そのまま出力します。

COIN record の format は、従来の format を踏襲し、DAQbox 2台を対に
して 1ユニットとし、従来の XY 情報を出すユニットとして扱っています。
従来の format は 3ユニット構成ですので、最後の 1ユニット分は
使っていません。

この gencoinz での format は

COIN n1 n2 n3 xh1 xc1 xav1 yh1 yc1 yav1 usec1 nsec1 xh2 xc2 xav2 yh2 yc2 yav2 usec2 nsec2 xh3 xc3 xav3 yh3 yc3 yav3 usec3 nsec3

です。
最初の n1 n2 n3 は、各ユニットでの対となる DAQbox の hit状況を示します。
　値が 1 は X のみに data があった
　値が 2 は Y のみに data があった
　値が 3 は X および Y に data があった
ことを示します。n3 は常に 0 です。
従って、飛程が決定できる record は

COIN 3 3 0

で始まります。ユニット間の coincidence があった場合のみ出力されますので、
n1 および n2 は常に 0 より大きい値です。

以下
xh*   x-plane での hit 数
xc*   x-plane での cluster 数
xav*  x の平均値（整数、チャネル数の10倍単位、すなわちほぼミリメートル）
yh*   y-plane での hit 数
yc*   y-plane での cluster 数
yav*  y の平均値（整数、チャネル数の10倍単位、すなわちほぼミリメートル）
usec* マイクロ秒カウンタの値
nsec* ナノ秒カウンタの値
です。


以下は、以前のパッケージからのコピーです。

===================================================================
このパッケージは、1F1 用のパッケージを、E-hall における
5ユニット観測用に修正したものです。


　　　　　　　　　　　　　　　　　　　　　藤井啓文
                                      (2015年10月16日初版）

以下は、1F1 用のパッケージからコピー。

===================================================================
このパッケージは 1F1 での rawdata からの同期事象の抽出と、
その簡単な解析をするプログラムのソースパッケージです。
以下の五つのプログラムを作成することができます。
-----------------------------------------------------------------
[使用法]
-----------------------------------------------------------------
１）gencoinz
このプログラムは、rawdata から同期事象を抽出します。
detector1 (DAT1,DAT2,DAT3を使用）、detector2（DAT4,DAT5,DAT6を使用）
は自動で判別します。

    gencoinz [options] filename

filename に rawdata file を指定します。gzip 圧縮
されていても、いなくても動作します。
出力は標準出力です。通常は、redirect してファイルにしてください。
現在のテストでは標準 30分 run で 1 M バイトを少し超えるぐらいです。

option として指定できるのは
  -width  n      ユニット間の同期時間幅を指定します（指定値以下を同期、
                 すなわち指定値は同期に含まれる）。
                 単位はナノ秒です。指定しなかった場合は 32ナノです。
  -merge  n      一つのユニット内での僅差データを merge して一つのデータ
                 として扱います。その merge する時間幅を指定します
                （指定値以下を merge、すなわち指定値は merge される）。
                 単位はナノ秒です。指定しなかった場合は 8ナノ秒です。
  -out filename  出力ファイルを指定します。ファイルは gzip 圧縮されます。
                 指定しない場合は、標準出力になり、この場合は gzip 圧縮
                 されません。
  -longdump      同期 record の他、同期した raw data record も出力します。
                 （ファイルサイズが 5-6 倍になります。解析に必要な情報は
                 同期 record にありますので、通常は不要と思います。）
です。
-------------------------------------------------------------------
２）coinanaz
上記出力を解析して、すべての組み合わせについて同期事象数を出します。

      coinanaz filename

として使います。gencoinz と同様、gzip 圧縮されていてもいなくても
構いません。
Type[01*] は 0 番目のユニットと 1 番目のユニットが同期した数で、
すべての数、クラスタ数がXYともに 1 の数、ヒット数がXYともに 1 の数
と並んでいます。
--------------------------------------------------------------------
４）coinrate
リストに記載された同期ファイルを順に解析して事象率を出力します。

      coinrate listfile

として使います。gencoinz と同様、gzip 圧縮されていてもいなくても
構いません。
計測時間は、最初の同期事象のマイクロ秒カウンタの時刻と最後の
同期事象のマイクロ秒カウンタの時刻の差としています（ナノ秒
カウンタは使っていません）。時刻差が 1 秒未満の場合は何も
しません。
出力は1行1 runで、各欄は TAB で区切られています。Excel などの
表計算ソフトウェアで開く時は TAB 区切りのテキストファイルとして
開いてください。
--------------------------------------------------------------------
５）coinimg
gencoinz の（複数の）出力ファイルから (dx,dy) の画像を作ります。

	coinimg listfile [type]

listfile は1行毎に gencoinz の出力ファイル名を書いたものです。
listfile に書かれたファイルが全部足しあわされます。
type は 0,1,2,3 のいずれかを指定します。
0 は 0 と 1 の同期で、cluster 1, hitは 3 以下
1 は 0 と 2 の同期で、cluster 1, hitは 3 以下
2 は 1 と 2 の同期で、cluster 1, hitは 3 以下
3 は 0,1,2 の同期で、0 と 2 による (dx,dy) で、cluster 1, hit は 3 以下
です。
出力は
coinimg.png
と
coinimg.csv
が作られます（ファイル名は決め打ちです。上書きされますので
注意してください）。
---------------------------------------------------------------------
[作成法]
g++ と zlib が必要です。
簡単な動作確認を MinGW (Windows) と、Linux (Red Hat 4.4.7)　で
行ってあります。
ソースファイルを展開したフォルダで、

make

としてください。MinGW の場合は、makefile 中の

EXEEXT =

を

EXEEXT = .exe

としてください。
--------------------------------------------------------------------

gencoinz の出力について

gencoin が独自に出力する record は基本的に COIN record のみです（起動
情報を残すためINFO record も出力します）。
rawdata file から DATx record を取り出し、解析します。それ以外の
record は、そのまま出力します。

COIN record の format は

COIN n1 n2 n3 xh1 xc1 xav1 yh1 yc1 yav1 usec1 nsec1 xh2 xc2 xav2 yh2 yc2 yav2 usec2 nsec2 xh3 xc3 xav3 yh3 yc3 yav3 usec3 nsec3

です。
最初の n1 n2 n3 は、coincidence window に入った各ユニットの事象数です。
以下
xh*   x-plane での hit 数
xc*   x-plane での cluster 数
xav*  x の平均値（整数、チャネル数の10倍単位、すなわちほぼミリメートル）
yh*   y-plane での hit 数
yc*   y-plane での cluster 数
yav*  y の平均値（整数、チャネル数の10倍単位、すなわちほぼミリメートル）
usec* マイクロ秒カウンタの値
nsec* ナノ秒カウンタの値
が、ユニット数（３ユニット）出力されます。coincidence window に入っていない
ユニットの値は不定です。最初の n1 n2 n3 で、どれが有効かを判断して
ください。

